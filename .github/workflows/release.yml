name: Release binaries

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-unknown-linux-gnu]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      # No cross toolchain needed for x86_64 builds

      - name: Build (release)
        env:
          RUSTFLAGS: -C debuginfo=0
        run: |
          cargo build --locked --release --target ${{ matrix.target }}

      - name: Package tarball
        run: |
          mkdir -p dist
          BINARY=target/${{ matrix.target }}/release/cmux-proxy
          test -x "$BINARY" || { echo "Binary not found: $BINARY"; exit 1; }
          cp "$BINARY" cmux-proxy
          chmod +x cmux-proxy
          TAR_VERSIONED="dist/cmux-proxy-${{ github.ref_name }}-${{ matrix.target }}.tar.gz"
          TAR_LATEST="dist/cmux-proxy-${{ matrix.target }}.tar.gz"
          tar -czf "$TAR_VERSIONED" cmux-proxy
          cp "$TAR_VERSIONED" "$TAR_LATEST"

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            dist/*.tar.gz
